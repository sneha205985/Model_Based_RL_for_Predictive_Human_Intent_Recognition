[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "human-intent-rl"
version = "0.1.0"
description = "Model-Based RL for Predictive Human Intent Recognition"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Human Intent Recognition Team", email = "team@humanintent.ai"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Human Machine Interfaces",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.24.0",
    "scipy>=1.10.0",
    "scikit-learn>=1.3.0",
    "torch>=2.0.0",
    "gym>=0.26.0",
    "robotics-toolbox-python>=1.1.0",
    "modern-robotics>=1.0.0",
    "pyro-ppl>=1.8.0",
    "arviz>=0.15.0",
    "pymc>=5.0.0",
    "matplotlib>=3.6.0",
    "plotly>=5.15.0",
    "seaborn>=0.12.0",
    "control>=0.9.4",
    "slycot>=0.5.0",
    "tqdm>=4.64.0",
    "configparser>=5.3.0",
    "pandas>=2.0.0",
    "h5py>=3.8.0",
    "cvxpy>=1.3.0",
    "casadi>=3.6.0",
    "typing-extensions>=4.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "types-requests>=2.31.0",
]
jupyter = [
    "jupyter>=1.0.0",
    "ipykernel>=6.25.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/team/human-intent-rl"
Repository = "https://github.com/team/human-intent-rl"
Documentation = "https://human-intent-rl.readthedocs.io"
"Bug Reports" = "https://github.com/team/human-intent-rl/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.setuptools.package-dir]
"" = "."
"human_intent_rl" = "src"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "robotics_toolbox.*",
    "modern_robotics.*",
    "pyro.*",
    "arviz.*",
    "pymc.*",
    "control.*",
    "slycot.*",
    "cvxpy.*",
    "casadi.*",
]
ignore_missing_imports = true

[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long
    "W503",  # line break before binary operator
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".eggs",
    "*.egg-info",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-fail-under=80",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "slow: Slow running tests",
    "requires_gpu: Tests that require GPU",
    "requires_robot: Tests that require robot hardware",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]